<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.jeebiz</groupId>
		<artifactId>jeebiz-boot-samples</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>jeebiz-boot-sample-flowable-app</artifactId>
	
	<properties>
		
		<!-- 生成部署脚本参数 -->
		<appassembler-bin-fileName>jeebiz-boot</appassembler-bin-fileName>
		<appassembler-app-name>jeebiz-boot</appassembler-app-name>
		
		<!-- 生成Docker镜像参数: docker build、push地址-->
		<docker.workdir>/u01/boot/${project.artifactId}</docker.workdir>
		<docker.push.repostory>192.168.31.109</docker.push.repostory>
		<docker.build.repostory>http://192.168.31.108:2375</docker.build.repostory>
		<!--push镜像到私有库项目的名称 -->
		<docker.registry.name>jeebiz</docker.registry.name>
		
		<!-- 生成API离线文参数-->
		<swagger.input>http://localhost:8080/v2/api-docs</swagger.input>
		
	</properties>

	<dependencies>

		<!-- For Jeebiz -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>jeebiz-boot-api</artifactId>
			<version>${jeebiz-boot.version}</version>
		</dependency>
		
		<!-- For Embedded Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- For Thymeleaf View -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
		    <groupId>org.webjars</groupId>
		    <artifactId>webjars-locator</artifactId>
		</dependency>
		<!-- For Swagger -->
		<dependency>
			<groupId>com.spring4all</groupId>
			<artifactId>swagger-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.github.xiaoymin</groupId>
		    <artifactId>swagger-bootstrap-ui</artifactId>
		</dependency>
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-data-rest</artifactId>
		</dependency>
		<!-- For Validation -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-el</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.vindell</groupId>
			<artifactId>spring-boot-starter-validation-mimetypes</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.jsoup</groupId>
		    <artifactId>jsoup</artifactId>
		</dependency>
		<!-- For Dozer -->
		<dependency>
			<groupId>com.github.vindell</groupId>
			<artifactId>spring-boot-starter-dozer</artifactId>
		</dependency>
		<!-- <dependency>
		    <groupId>com.github.dozermapper</groupId>
		    <artifactId>dozer-spring-boot-starter</artifactId>
		</dependency> -->
		<!-- For AOP -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- For Cache Support -->
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-cache</artifactId>
	    </dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
		</dependency>
		<!-- For Log4j2 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-slf4j-impl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.vindell</groupId>
			<artifactId>spring-boot-starter-log4j2-plus</artifactId>
		</dependency>
		<!-- For Mybatis -->
		<dependency>
		    <groupId>com.baomidou</groupId>
		    <artifactId>mybatis-plus-boot-starter</artifactId>
		    <exclusions>
		    	<exclusion>
		    		<groupId>org.freemarker</groupId>
		    		<artifactId>freemarker</artifactId>
		    	</exclusion>
		    </exclusions>
		</dependency>
		
		<!-- For Flowable App -->
        <dependency>
            <groupId>org.flowable</groupId>
            <artifactId>flowable-spring-boot-starter-app </artifactId>
        </dependency>
		<!-- For Flyway -->
		<dependency>
			<groupId>com.github.vindell</groupId>
			<artifactId>spring-boot-starter-flyway-plus</artifactId>
		</dependency>
		<!-- For Druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.vindell</groupId>
			<artifactId>spring-boot-starter-druid-plus</artifactId>
		</dependency>
		<!-- For Oracle 11g -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- For MySQL -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
			
		<!-- For Embed Tomcat -->
        <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency> -->
        <!-- For Embed Jetty -->
        <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency> -->
        <!-- For Embed Undertow -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
					<mainClass>net.jeebiz.boot.demo.DemoApplication</mainClass>
				</configuration>
			</plugin>
			<!-- 第一步：生成可执行的启动脚本 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
			</plugin>
			<!-- 第一步：通过antrun插件拷贝文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>
			<!-- 第三步：通过docker-maven插件构造Docker镜像 
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
			</plugin> -->
			<!-- 第四步：生成离线文档-->
			<!-- http://blog.didispace.com/swagger2markup-asciidoc/ -->
			<!-- First, use the swagger2markup plugin to generate asciidoc 
			<plugin>
				<groupId>io.github.swagger2markup</groupId>
				<artifactId>swagger2markup-maven-plugin</artifactId>
			</plugin>-->
			<!-- Run the generated asciidoc through Asciidoctor to generate other 
				documentation types, such as PDFs or HTML5
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
			</plugin> -->
		</plugins>
	</build>
	
</project>