<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.jeebiz.boot.demo.dao.IDemoDao" >
	
	<cache type="org.redisson.mybatis.RedissonCache">
		<!-- timeToLive：此参数指定删除对象之前在缓存中存储对象的最长时间。 -->
		<property name="timeToLive" value="200000"></property>
		<!-- maxIdleTime: 此参数指定对象在被自动删除之前可以保持空闲/未使用的最长时间。 -->
		<property name="maxIdleTime" value="100000"></property>
		<!-- maxSize: 此参数指定缓存中存储的条目的最大大小。 -->
		<property name="maxSize" value="100000"></property>
		<!-- redissonConfig: 此参数以YAML格式提供指向Redisson配置文件的链接。 -->
		<property name="redissonConfig" value="redisson.yaml"></property>
	</cache>
	
	<resultMap id="DemoModelMap" type="DemoModel">
		<result property="id" column="ID" />
		<result property="name" column="NAME" />
		<result property="text" column="TEXT" />
	</resultMap>
	
	<insert id="insert" parameterType="DemoModel">
		insert into BIZ_SIMPLE(NAME,TEXT) values(#{name},#{text}) 
	</insert>
	
	<delete id="delete"  parameterType="DemoModel">
		delete from BIZ_SIMPLE t where t.id = #{id}
	</delete>
	
	<delete id="batchDelete" parameterType="java.util.List">
		delete from BIZ_SIMPLE where id in
		<foreach collection="list" item="ids"  open="(" separator="," close=")">
		   #{ids}
		</foreach>
	</delete>
	
	<update id="update" parameterType="DemoModel">
		update BIZ_SIMPLE 
		<set>
			<if test="name != null and name != ''">name = #{name},</if>
			<if test="text != null and text != ''">text = #{text},</if>
		</set>
		where id = #{id}
	</update>
	
	<select id="getDependencies" resultType="java.util.HashMap" parameterType="java.util.List">
		SELECT distinct 
		 	   t.ID,
			   t.NAME
		  FROM BIZ_SIMPLE t, Table2 x
		 WHERE t.ID = x.SIMPLE_ID
		   AND t.ID in
			<foreach collection="list" item="ids"  open="(" separator="," close=")">
			   #{ids}
			</foreach>
	</select>
	
	<select id="getModel" resultMap="DemoModelMap" parameterType="java.lang.String">
		select ID,NAME,TEXT from BIZ_SIMPLE  t WHERE t.ID = #{id}
	</select>
	
	<select id="getPagedList" resultMap="DemoModelMap" parameterType="DemoModel">
		select ID,NAME,TEXT from BIZ_SIMPLE t
		<where>
			<if test="name != null and name != ''">t.name like '%'||#{name} ||'%'</if>
		</where>
	</select>
	
</mapper>