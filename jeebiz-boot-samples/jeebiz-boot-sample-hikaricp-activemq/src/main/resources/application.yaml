################################################################################################################
###Spring Boot 监控（安全、开放信息等）配置：
################################################################################################################
management:
  server:
    # 启用独立运维端口
    #port: 50000
  metrics:
    tags:
      # 在统计信息中添加自定义的标签
      application: ${spring.application.name}
  # 开启shutdown和health端点
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        # 指定上下文路径，启用相应端点
        # 指定上下文路径，启用相应端点
        base-path: /actuator
        include: health,shutdown,metrics,prometheus

################################################################################################################
###内置应用容器（Tomcat、Jetty、Undertow）配置：
################################################################################################################
server:
  compression:
    enabled: true
  # 默认为IMMEDIATE，表示立即关机；GRACEFUL表示优雅关机
  shutdown: graceful
  port: 8080
  servlet:
    session:
      timeout: 60m
  undertow:
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
    buffer-size: 512
    # 是否分配的直接内存(NIO直接分配的堆外内存)
    direct-buffers: true
    # 线程优化：
    # 《Java Concurrency in Practice》一书中，给出了估算线程池大小的公式：
    # Nthreads = Ncpu x Ucpu x (1 + W/C)
    # 《Programming Concurrency on the JVM Mastering》一书中，给出了估算线程池大小的公式：
    # Nthreads = Ncpu / (1 - 阻塞系数)
    # 概念：
    # Ncpu = CPU核心数
    # Ucpu = CPU使用率，0~1
    # W/C = 等待时间与计算时间的比率
    # 实际：
    # IO密集型 = 2Ncpu（可以测试后自己控制大小，2Ncpu一般没问题）（常出现于线程中：数据库数据交互、文件上传下载、网络数据传输等等）
    # 计算密集型 = Ncpu（常出现于线程中：复杂算法）
    threads:
      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
      # 不要设置过大，如果过大，启动项目会报错：打开文件数过多
      io: 2
      # 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
      # 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
      worker: 8
  jetty:
    threads:
      acceptors: 2
      selectors: 8
  tomcat:
    max-connections: 10000
    threads:
      max: 1024
      min-spare: 64
    accept-count: 65535

################################################################################################################
###okhttp3基本配置：
################################################################################################################
okhttp3:
  connect-timeout: 5s
  read-timeout: 30s
  write-timeout: 20s
  log-level: BODY
  pool:
    # 最大空闲连接梳数量，超出该值后，连接用完后会被关闭，最多只会保留idleConnectionCount个连接数量
    max-idle-connections: 48
    # 最大瞬时处理连接数量
    max-requests: 128
    # 每个请求地址最大瞬时处理连接数量
    max-requests-per-host: 24

################################################################################################################
###接口文档（Swagger UI）配置：
################################################################################################################
swagger:
  enabled: true
  title: Jeebiz Boot Demo
  description: Jeebiz Boot Demo
  version: 0.0.1-SNAPSHOT
  license: Apache License, Version 2.0
  license-url: https://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: 杭州极蚁网络科技有限公司
    email: hiwepy@163.com
    url: http://www.hiwepy.com/
  base-package: io.hiwepy
  base-path-pattern: /**
  apply-default-response-messages: true

################################################################################################################
###Spring Boot 相关组件（SpringMVC、Freemarker、Session、Cache、DataSource）配置：
################################################################################################################
spring:
  # 应用信息配置
  application:
    name: jeebiz-boot-sample-druid
  # 缓存配置：
  cache:
    type: ehcache
    ehcache:
      config: classpath:/conf/ehcache/ehcache.xml
  # 数据源配置：
  datasource:
    name: jeebiz_demo
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      # 是允许连接在连接池中空闲的最长时间
      minimum-idle: 5
      # 是允许连接在连接池中空闲的最长时间（以毫秒为单位）
      idle-timeout: 600000
      # 配置最大池大小
      maximum-pool-size: 10
      # 配置从池返回的连接的默认自动提交行为。默认值为true
      auto-commit: true
      # 连接池的名称
      pool-name: MyHikariCP
      # 池中连接关闭后的最长生命周期（以毫秒为单位）
      max-lifetime: 1800000
      # 是客户端等待连接池连接的最大毫秒数
      connection-timeout: 30000
      # 开启连接监测泄露
      leak-detection-threshold: 5000
      # 测试连接数据库
      connection-test-query: SELECT 1
  # 国际化信息配置
  messages:
    #指定message的basename，多个以逗号分隔，如果不加包名的话，默认从classpath路径开始，默认: messages
    basename: i18n/*/messages,i18n/messages
    #设定Message bundles的编码，默认: UTF-8
    encoding: UTF-8
  #出现错误时, 直接抛出异常
  mvc:
    throw-exception-if-no-handler-found: true
    #不要为我们工程中的资源文件建立映射
  # 会话配置（交个Shiro管理，此处不再指定）：
  session:
    store-type: none
  #thymelea模板配置：https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html
  thymeleaf:
    cache: false
    enabled: true
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML5

################################################################################################################
###Flyway (FlywayMigrationProperties) 数据库迁移脚本版本管理（实现软件版本升级数据库自动升级）配置：
################################################################################################################
  flyway:
    enabled: true
    locations:
    - classpath:db/migration/{vendor}
    #指定SQL起始版本信息
    baseline-on-migrate: true
    baseline-version: 1.0.0.0
    baseline-description: 业务框架、权限管理、日志管理初始化
    #如果已经有版本1和3，当发现新的版本2时，如果此参数为true,将会把版本2作为当前版本
    out-of-order: false
    #在进行版本升级前是否进行SQL版本信息校验
    validate-on-migrate: true
    #设置如果验证失败是否删除表结构
    clean-on-validation-error: true
    #禁止对数据库进行相关清除操作
    clean-disabled: true

################################################################################################################
###mybatis-plus (MybatisPlusProperties) 基本配置：
###http://mp.baomidou.com/#/spring-boot
################################################################################################################
mybatis-plus:
  # 初始配置文件
  check-config-location: true
  # config-location: classpath:/conf/mybatis/sqlMapConfig.xml
  #configuration-properties:
  # 初始配置参数
  #configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    #map-underscore-to-camel-case: true
    #cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
    #jdbc-type-for-null: 'null'
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  mapper-locations: classpath*:net/jeebiz/**/dao/**/sqlmap/mysql/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: io.hiwepy.**.dao.entities
  configuration:
    # 指定MyBatis如何自动映射列到字段/属性。PARTIAL只会自动映射简单，没有嵌套的结果。
    # FULL会自动映射任意复杂的结果（嵌套的或其他情况）;有效值：NONE,PARTIAL,FULL,默认值：PARTIAL
    auto-mapping-behavior: partial
    # 当检测出未知列（或未知属性）时，如何处理，    默认情况下没有任何提示，这在测试的时候很不方便，不容易找到错误
    auto-mapping-unknown-column-behavior: failing
    # 当启用时，使用延迟加载属性的对象在发起任何延迟属性的调用时会被完全加载。否则，每个属性在请求时就加载。默认值：true
    aggressive-lazy-loading: true
    # 全局二级缓存开关：默认是true，如果它配成false，其余各个Mapper XML文件配成支持cache也没用
    cache-enabled: true
    call-setters-on-nulls: false
    # database-id:
    # default-fetch-size:
    # 设置超时时间，它决定驱动等待一个数据库响应的时间。有效值：Any，positive，integer ；默认值：Not Set(null)
    default-statement-timeout: 25
    # 配置默认的执行器。SIMPLE 执行器没有什么特别之处。REUSE执行器重用预处理语句。BATCH 执行器重用语句和批量更新
    # 有效值：SIMPLE,REUSE,BATCH;默认值：SIMPLE
    default-executor-type: reuse
    jdbc-type-for-null: null
    map-underscore-to-camel-case: false
    # 允许或不允许多种结果集从一个单独的语句中返回（需要适合的驱动）;有效值：true,false;默认值：true
    multiple-result-sets-enabled: true
    #use-actual-param-name:
    # 使用列标签代替列名。不同的驱动在这方便表现不同。参考驱动文档或充分测试两种方法来决定所使用的驱动。有效值：true,false;默认值：true
    use-column-label: true
    # 允许JDBC支持生成的键。需要适合的驱动。如果设置为true则这个设置强制生成的键被使用，尽管一些驱动拒绝兼容但仍然有效（比如 Derby）;有效值：true,false;默认值：false
    use-generated-keys: false
    safe-row-bounds-enabled: false
    safe-result-handler-enabled: true
    # 全局地禁用或启用延迟加载。禁用时，所有关联查询会被马上加载;默认值：true
    lazy-loading-enabled: true
    lazy-load-trigger-methods:
      equals
      clone
      hashCode
      toString
    local-cache-scope: session
    log-prefix: "[Mybatis]"
    #log-impl: org.apache.ibatis.logging.log4j2.Log4j2LoggerImpl.class

  global-config:
    db-config:
      id-type: auto
      #mp2.3+ 全局表前缀 mp_
      #table-prefix: mp_
      #刷新mapper 调试神器
      #refresh-mapper: true
      #数据库大写下划线转换
      #capital-mode: true

################################################################################################################
###logging (log4j2) 基本配置：
###http://www.cnblogs.com/yhtboke/p/Mybatis.html
################################################################################################################
logging:
  config: classpath:conf/log4j2.xml
